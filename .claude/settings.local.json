{
  "permissions": {
    "allow": [
      "Bash(git remote add:*)",
      "Bash(git checkout:*)",
      "Bash(railway whoami:*)",
      "Bash(railway status:*)",
      "Bash(railway service:*)",
      "Bash(railway domain:*)",
      "Bash(railway link:*)",
      "Bash(railway logs:*)",
      "Bash(railway variables:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(railway redeploy:*)",
      "Bash(railway up:*)",
      "Bash(Select-String -Pattern '\"\"\"\"backend\"\"\"\"' -Context 0,50)",
      "Bash(python:*)",
      "Bash(curl:*)",
      "Read(//e//**)",
      "Bash(npm install:*)",
      "Bash(railway:*)",
      "Bash(mkdir:*)",
      "Bash(npm run dev:*)",
      "Bash(git log:*)",
      "Bash(npm run build:*)",
      "Bash(cat:*)",
      "Bash(Select-String -Pattern '\"\"\"\"scripts\"\"\"\"' -Context 0,10)",
      "Bash(node scripts/check-jose.js:*)",
      "Bash(npm run prestart:*)",
      "Bash(git rev-parse:*)",
      "Bash(node --version:*)",
      "Bash(powershell -Command \"Get-Content ''.env'' | Select-String -Pattern ''^[A-Z_]+=.+'' | ForEach-Object { $_Line.Split(''='')[0] + ''='' + if($_Line.Split(''='')[1]) { ''SET'' } else { ''EMPTY'' } }\")",
      "Bash(powershell -Command:*)",
      "Bash(while read var)",
      "Bash(do echo:*)",
      "Bash(done)",
      "Bash(timeout 10 npm run prestart:*)",
      "Bash(timeout 10 npm start)",
      "Bash(npx prisma generate:*)",
      "Bash(while read file)",
      "Bash(do sed -i \"s|from ''''\\.\\./context/AuthContext''''|from ''''../context/SupabaseAuthContext''''|g\" \"$file\" sed -i \"s|from ''''\\./context/AuthContext''''|from ''''./context/SupabaseAuthContext''''|g\" \"$file\" sed -i \"s|from ''''@/context/AuthContext''''|from ''''@/context/SupabaseAuthContext''''|g\" \"$file\" echo \"Fixed: $file\" done)",
      "Bash(find:*)",
      "Bash(npm start)",
      "Bash(npm run test-auth:*)",
      "Bash(claude mcp add:*)",
      "Bash(claude mcp --help:*)",
      "Bash(netstat:*)",
      "Bash(findstr:*)",
      "Bash(taskkill:*)",
      "Skill(superpowers:writing-plans)",
      "Bash(timeout 60 bash -c 'while true; do STATUS=$(curl -s -o /dev/null -w \"\"%{http_code}\"\" https://api.imaginethisprinted.com/api/health); echo \"\"Status: $STATUS\"\"; if [ \"\"$STATUS\"\" = \"\"200\"\" ]; then echo \"\"âœ… API is healthy!\"\"; break; fi; sleep 5; done')",
      "Skill(superpowers:subagent-driven-development)",
      "Bash(node:*)",
      "Bash(git rm:*)"
    ],
    "deny": [],
    "ask": []
  }
}
